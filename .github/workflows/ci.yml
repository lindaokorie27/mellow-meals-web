name: Test Build Deploy
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  install-build:
    name: Install dependencies and build app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout of repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        # Tell pnpm to use cached downloads whenever possible instead of downloading from the server
        run: pnpm --prefer-offline

      - name: Build
        run: pnpm build

  lint-test:
    name: Lint and Run unit tests
    runs-on: ubuntu-latest
    needs: install-build
    steps:
      - name: Checkout of repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Lint package
        run: pnpm lint

      - name: Run tests
        run: pnpm test

  interaction-and-accessibility:
    name: Interaction and Accessibility
    runs-on: ubuntu-latest
    needs: install-build
    steps:
      - name: Checkout of repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Build Storybook
        run: pnpm build-storybook --quiet

      - name: Serve Storybook and run tests
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --silent" \
            "npx wait-on tcp:6006 && pnpm test-storybook"
